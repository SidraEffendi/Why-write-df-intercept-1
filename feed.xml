<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://sidraeffendi.github.io/Why-write-df-intercept-1/feed.xml" rel="self" type="application/atom+xml" /><link href="https://sidraeffendi.github.io/Why-write-df-intercept-1/" rel="alternate" type="text/html" /><updated>2020-09-22T02:19:48-05:00</updated><id>https://sidraeffendi.github.io/Why-write-df-intercept-1/feed.xml</id><title type="html">Data Science</title><subtitle>Technical blogs.</subtitle><entry><title type="html">What if I skip df[intercept]= 1 in linear regression?</title><link href="https://sidraeffendi.github.io/Why-write-df-intercept-1/2020/09/22/What-if-I-skip-df-intercept-=1.html" rel="alternate" type="text/html" title="What if I skip df[intercept]= 1 in linear regression?" /><published>2020-09-22T00:00:00-05:00</published><updated>2020-09-22T00:00:00-05:00</updated><id>https://sidraeffendi.github.io/Why-write-df-intercept-1/2020/09/22/What-if-I-skip-df%5Bintercept%5D=1</id><content type="html" xml:base="https://sidraeffendi.github.io/Why-write-df-intercept-1/2020/09/22/What-if-I-skip-df-intercept-=1.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-09-22-What if I skip df[intercept]=1?.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Linear regression is a primary type of predictive analysis where we are trying to find the best-fitted line for a scatter plot, and for simple linear regression this line is represented as:&lt;/p&gt;
&lt;p&gt;
$$ \hat{y}= b1x+b0 $$
&lt;/p&gt;
&lt;p&gt;where, b1 is the slope and b0 is the intercept&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;figure&gt;
  
    &lt;img class=&quot;docimage&quot; src=&quot;/Why-write-df-intercept-1/images/copied_from_nb/line_fitting.png&quot; alt=&quot;&quot; style=&quot;max-width: 400px&quot; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Let's take an example where we want to predict the price of a house based on how many bedrooms it has. The variable we want to predict is the &lt;strong&gt;price&lt;/strong&gt;, which is represented by &lt;strong&gt;y&lt;/strong&gt; and &lt;strong&gt;x&lt;/strong&gt; means the &lt;strong&gt;no.of bedrooms&lt;/strong&gt; in the house. In this context, the change in price, when we add one more bedroom to the house, is represented by value &lt;strong&gt;b1&lt;/strong&gt; and our intercept &lt;strong&gt;b0&lt;/strong&gt; is the value of the house when it has no bedrooms at all (you can crash in the bathtub). Now that we have our interpretations down let's dive into some code.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;To find the value of the parameters &lt;strong&gt;b1&lt;/strong&gt; and &lt;strong&gt;b0&lt;/strong&gt; of the best-fitted line, we write a simple three-line code in python.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;intercept&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;         &lt;span class=&quot;c1&quot;&gt;# df is dataframe containing our data&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#performing linear regression&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;linear_model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OLS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Price&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;intercept&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;bedrooms&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# y:price, x:[intercept,bedrooms]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear_model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;In the code snippet above, notice how we added a column 'intercept' to our data before performing linear regression and set its value to 1. This line of code, begets the question -  &lt;strong&gt;what if I skip this line of code or have intercept value other than 1?&lt;/strong&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Explanation:&quot;&gt;Explanation:&lt;a class=&quot;anchor-link&quot; href=&quot;#Explanation:&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;In the linear regression model, OLS finds &lt;strong&gt;&quot;weight * predictor&quot;&lt;/strong&gt; for each term used in the regression. So, if we skip the intercept variable, which looks like this:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linear_model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OLS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;bedrooms&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# y:price, x:bedrooms&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;then, OLS will see the equation as:&lt;/p&gt;
&lt;p&gt;
$$y = b1*x$$
&lt;/p&gt;
&lt;p&gt;OLS algorithm will now proceed to find b1 and leave out b0 because there is only one predictor &lt;strong&gt;x&lt;/strong&gt; given to it for which it will calculate the weight &lt;strong&gt;b1&lt;/strong&gt;. Without the intercept, we force the line to always pass by the origin (0, 0) and we never get the predictive relationship between price and the no.of bedrooms that we are seeking as per our fitted model. There are rare cases where we skip the intercept but it only when by some theoretical or some other reason we have a guarantee the line passes through the origin.&lt;/p&gt;
&lt;p&gt;We are now clear we want the value for the intercept &lt;strong&gt;b0&lt;/strong&gt;; therefore, we add a column for it in our database. For our OLS equation to be complete, we need a predictor for the &lt;strong&gt;weight = b0&lt;/strong&gt;. Since we want the value of intercept unaltered, we multiply it by 1, that is, &lt;strong&gt;weight(=b0) * predictor(=1)&lt;/strong&gt;. As a result, our OLS equation is:&lt;/p&gt;
&lt;p&gt;
$$y = b1*x + b0*1$$
&lt;/p&gt;
&lt;p&gt;Now, our linear regression model knows it has to find the value of both b1 and b0.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; In R language, intercept is included anyway without initialization.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>